<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/fitness-microservice/aiservice/src/main/java/com/fitness/aiservice/service/GeminiService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/fitness-microservice/aiservice/src/main/java/com/fitness/aiservice/service/GeminiService.java" />
              <option name="originalContent" value="package com.fitness.aiservice.service;&#10;&#10;import org.springframework.beans.factory.annotation.Value;&#10;import org.springframework.stereotype.Service;&#10;import org.springframework.web.reactive.function.client.WebClient;&#10;&#10;import java.util.HashMap;&#10;import java.util.Map;&#10;&#10;@Service&#10;public class GeminiService {&#10;    private final WebClient webClient;&#10;&#10;    @Value(&quot;${gemini.api.url}&quot;)&#10;    private String geminiApiUrl;&#10;&#10;    @Value(&quot;${gemini.api.key}&quot;)&#10;    private String geminiApiKey;&#10;&#10;    public GeminiService(WebClient.Builder webClientBuilder) {&#10;        this.webClient = webClientBuilder.build();&#10;    }&#10;&#10;    public String getAnswer(String question){&#10;        Map&lt;String,Object&gt; requestBody=Map.of(&#10;                &quot;contents&quot;, new Object[]{&#10;                        Map.of(&quot;parts&quot;, new Object[]{&#10;                                Map.of(&quot;text&quot;,question)&#10;                        })&#10;                }&#10;        );&#10;&#10;        String response = webClient.post()&#10;                .uri(geminiApiUrl+geminiApiKey)&#10;                .header(&quot;Content-Type&quot;, &quot;application/json&quot; )&#10;                .bodyValue(requestBody)&#10;                .retrieve()&#10;                .bodyToMono(String.class)&#10;                .block();&#10;        return response;&#10;&#10;    }&#10;&#10;&#10;}&#10;" />
              <option name="updatedContent" value="package com.fitness.aiservice.service;&#10;&#10;import org.springframework.beans.factory.annotation.Value;&#10;import org.springframework.stereotype.Service;&#10;import org.springframework.web.reactive.function.client.WebClient;&#10;&#10;import java.util.HashMap;&#10;import java.util.Map;&#10;&#10;@Service&#10;public class GeminiService {&#10;    private final WebClient webClient;&#10;&#10;    @Value(&quot;${gemini.api.url}&quot;)&#10;    private String geminiApiUrl;&#10;&#10;    @Value(&quot;${gemini.api.key}&quot;)&#10;    private String geminiApiKey;&#10;&#10;    public GeminiService(WebClient.Builder webClientBuilder) {&#10;        this.webClient = webClientBuilder.build();&#10;    }&#10;&#10;    public String getAnswer(String question){&#10;        Map&lt;String,Object&gt; requestBody=Map.of(&#10;                &quot;contents&quot;, new Object[]{&#10;                        Map.of(&quot;parts&quot;, new Object[]{&#10;                                Map.of(&quot;text&quot;,question)&#10;                        })&#10;                }&#10;        );&#10;&#10;        String response = webClient.post()&#10;                .uri(geminiApiUrl+geminiApiKey)&#10;                .header(&quot;Content-Type&quot;, &quot;application/json&quot; )&#10;                .bodyValue(requestBody)&#10;                .retrieve()&#10;                .bodyToMono(String.class)&#10;                .block();&#10;        return response;&#10;&#10;    }&#10;&#10;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>